<launch>

    <!-- TODO Fattorizzare parametri condivisi dai diversi PID con $arg -->

    <!-- Each PID subscribes: -->
    <!-- /k_pose ~ /state/data: input to the PID controller from the controlled system -->
    <!-- /setpoint/data: the desired value the target (CLT) should be controlled to -->

    <!-- Each PID publishes: -->
    <!-- /control_effort/data ~ k_effort: output from the PID controller and which apply correcting force to the controlled system -->    

    <node name="x_pid" pkg="pid" type="controller" output="screen">
      <!-- TODO controlla perchè c'è anche un altro topic /state -->
      <!-- ma è fuori da k_pid -->      
      <remap from="/state" to="x_pose"/>
      <remap from="/control_effort" to="x_effort"/>
      <param name="Kp" value="5.0" />
      <param name="Ki" value="0.0" />
      <param name="Kd" value="0.1" />
      <param name="upper_limit" value="10" />
      <param name="lower_limit" value="-10" />
      <param name="windup_limit" value="10" />
      <param name="cutoff_frequency" value="20" />
      <param name="diagnostic_period" value="0.25" />
      <param name="max_loop_frequency" value="105.0" />
      <param name="min_loop_frequency" value="95.0" />
    </node>

    <node name="y_pid" pkg="pid" type="controller" output="screen">
      <remap from="/state" to="y_pose"/>
      <remap from="/control_effort" to="y_effort"/>
      <param name="Kp" value="5.0" />
      <param name="Ki" value="0.0" />
      <param name="Kd" value="0.1" />
      <param name="upper_limit" value="10" />
      <param name="lower_limit" value="-10" />
      <param name="windup_limit" value="10" />
      <param name="cutoff_frequency" value="20" />
      <param name="diagnostic_period" value="0.25" />
      <param name="max_loop_frequency" value="105.0" />
      <param name="min_loop_frequency" value="95.0" />
    </node>

    <node name="z_pid" pkg="pid" type="controller" output="screen">
      <remap from="/state" to="z_pose"/>
      <remap from="/control_effort" to="z_effort"/>
      <param name="Kp" value="5.0" />
      <param name="Ki" value="0.0" />
      <param name="Kd" value="0.1" />
      <param name="upper_limit" value="10" />
      <param name="lower_limit" value="-10" />
      <param name="windup_limit" value="10" />
      <param name="cutoff_frequency" value="20" />
      <param name="diagnostic_period" value="0.25" />
      <param name="max_loop_frequency" value="105.0" />
      <param name="min_loop_frequency" value="95.0" />
     </node>

    <!--
    This node simulates a 1st or 2nd-order dynamic system, publishes its state,
    and subscribes to a 'control_effort' topic. The control effort is used
    to stabilize the servo.
    -->
    <node name="servo_sim_node" pkg="pid" type="plant_sim" output="screen" >
      <param name="plant_order" value="2" />
    </node>
    <!--TODO Sistema di ordine 2?-->

    <node name="setpoint_node" pkg="pid" type="setpoint_node" output="screen" />

    <node pkg="diagnostic_aggregator" type="aggregator_node" name="diagnostic_aggregator" >
      <rosparam command="delete" param="/diagnostic_aggregator" />
      <rosparam command="load" file="$(find landing_pkg)/pid_config/pid_diags.yaml" />
    </node>

    <!-- rqt_plot is a resource hog, so if you're seeing high CPU usage, don't launch rqt_plot  -->
    <!-- TODO Display if needed -->
    <!--<node name="rqt_plot" pkg="rqt_plot" type="rqt_plot"
          args="/control_effort/data /state/data /setpoint/data" />-->

    <node name="rqt_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure" />

    <node name="rqt_robot_monitor" pkg="rqt_robot_monitor" type="rqt_robot_monitor" />
</launch>
